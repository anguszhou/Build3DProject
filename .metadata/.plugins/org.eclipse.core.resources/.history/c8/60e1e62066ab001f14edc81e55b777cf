package xjtu.citi.chart;

import java.awt.Color; 
import java.awt.Font; 
import java.io.IOException; 
import java.io.PrintWriter; 
import java.text.NumberFormat; 
import java.text.SimpleDateFormat; 
import java.util.Iterator;

import javax.servlet.http.HttpSession; 
import org.jfree.chart.ChartFactory; 
import org.jfree.chart.ChartRenderingInfo; 
import org.jfree.chart.ChartUtilities; 
import org.jfree.chart.JFreeChart; 
import org.jfree.chart.axis.DateAxis; 
import org.jfree.chart.axis.NumberAxis;
import org.jfree.chart.axis.NumberTickUnit;
import org.jfree.chart.entity.StandardEntityCollection; 
import org.jfree.chart.plot.XYPlot; 
import org.jfree.chart.renderer.xy.XYItemRenderer; 
import org.jfree.chart.renderer.xy.XYLineAndShapeRenderer; 
import org.jfree.chart.labels.*;
import org.jfree.chart.servlet.ServletUtilities; 
import org.jfree.chart.title.LegendTitle;
import org.jfree.chart.title.TextTitle; 
import org.jfree.data.time.Day; 
import org.jfree.data.time.TimeSeries; 
import org.jfree.data.time.TimeSeriesCollection; 
import org.jfree.data.xy.XYDataset; 
import org.jfree.ui.RectangleInsets; 

import xjtu.citi.dao.ISMEassessmentDao;
import xjtu.citi.impl.SMEassessmentDaoImpl;
import xjtu.citi.entity.SMEassessment;
import java.util.Collection;
/** 
* 曲线图的绘制 
*/ 
public class RiskLevelHistoryChart
{ 
/** 
* 返回生成图片的文件名 
* @param session 
* @param pw 
* @return 生成图片的文件名 
*/ 
public String getRiskLevelChart(HttpSession session, PrintWriter pw) 
{ 
XYDataset dataset = this.createDateSet();//建立数据集 
String fileName = null; 
//建立JFreeChart 
JFreeChart chart = ChartFactory.createTimeSeriesChart( 
"企业历史风险等级曲线", // title 
"日期", // x-axis label 
"风险等级", // y-axis label 
dataset, // data 
true, // create legend?
true, // generate tooltips? 
false // generate URLs? 
); 

//设置JFreeChart的显示属性,对图形外部部分进行调整 
chart.setBackgroundPaint(Color.WHITE);//设置曲线图背景色 

//设置字体大小，形状 
Font font_title = new Font("宋体", Font.BOLD, 16); 
Font font_tig = new Font("宋体", Font.BOLD, 12); 
//标题
TextTitle title = new TextTitle("企业历史风险等级曲线", font_title); 
chart.setTitle(title); 

//副标题 
/*TextTitle subtitle = 
new TextTitle("副标题", new Font("黑体", Font.BOLD, 12)); 
chart.addSubtitle(subtitle); 
chart.setTitle(title); //标题 
*/

//设置图示标题字符 
LegendTitle legengTitle = chart.getLegend(); 
legengTitle.setItemFont(font_tig); 

XYPlot plot = (XYPlot) chart.getPlot();//获取图形的画布 
plot.setBackgroundPaint(Color.lightGray);//设置网格背景色 
plot.setDomainGridlinePaint(Color.white);//设置网格竖线(Domain轴)颜色 
plot.setRangeGridlinePaint(Color.white);//设置网格横线颜色 
plot.setAxisOffset(new RectangleInsets(5.0, 5.0, 5.0, 5.0));//设置曲线图与xy轴的距离 
plot.setDomainCrosshairVisible(true); 
plot.setRangeCrosshairVisible(true); 
XYItemRenderer r = plot.getRenderer(); 
if (r instanceof XYLineAndShapeRenderer) 
{ 
XYLineAndShapeRenderer renderer = (XYLineAndShapeRenderer) r; 
renderer.setBaseShapesVisible(true); 
renderer.setBaseShapesFilled(true);
renderer.setSeriesPaint(0, Color.blue);//设置折线颜色
renderer.setBaseItemLabelGenerator(new StandardXYItemLabelGenerator());
renderer.setBaseItemLabelsVisible(true); //设置折线数值是否可见
} 
//设置Y轴 
NumberAxis numAxis = (NumberAxis) plot.getRangeAxis(); 
NumberFormat numFormater = NumberFormat.getNumberInstance(); 
numAxis.setNumberFormatOverride(numFormater); 
numAxis.setTickLabelFont(font_tig);
numAxis.setLabelFont(font_title);
numAxis.setUpperMargin(0.15); //最高点边距
//numAxis.setInverted(true);//设置是否反向
numAxis.setAutoTickUnitSelection(false);
numAxis.setTickUnit(new NumberTickUnit(1) );//设置坐标间隔


//设置提示信息 

//设置X轴（日期轴） 
DateAxis axis = (DateAxis) plot.getDomainAxis(); 
axis.setDateFormatOverride(new SimpleDateFormat("yy年MM月dd日")); 
axis.setLabelFont(font_title);//设置x轴标题
axis.setTickLabelFont(font_tig);//设置x轴坐标格式
ChartRenderingInfo info = new ChartRenderingInfo( new StandardEntityCollection()); 
try 
{ 
fileName = ServletUtilities.saveChartAsPNG(chart, 500, 300, info, 
session);//生成图片 
// Write the image map to the PrintWriter 
ChartUtilities.writeImageMap(pw, fileName, info, false); 
} 
catch (IOException e) 
{ 
e.printStackTrace(); 
} 
pw.flush(); 
return fileName;//返回生成图片的文件名 
} 
/** 
* 建立生成图形所需的数据集 
* @return 返回数据集 
*/ 
private XYDataset createDateSet() 
{ 
TimeSeriesCollection dataset = new TimeSeriesCollection();//时间曲线数据集合 
TimeSeries s1 = new TimeSeries("企业历史风险等级曲线",Day.class);//创建时间数据源，每一个//TimeSeries在图上是一条曲线 
ISMEassessmentDao dao = new SMEassessmentDaoImpl();
Collection<SMEassessment>list=null;
list=dao.findByCompanyId(1);
for (Iterator iterator = list.iterator(); iterator.hasNext();)
{
	SMEassessment sme = (SMEassessment) iterator.next();
	s1.add(new Day(sme.getTime()),(sme.getRisklevel().charAt(0)-'A'+1));
}
dataset.addSeries(s1); 
dataset.setDomainIsPointsInTime(true); 
return dataset; 
} 

} 